<UserControl x:Class="CofileUI.UserControls.Cofile"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 
             xmlns:local="clr-namespace:CofileUI.UserControls"
			 xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" 
			 xmlns:System="clr-namespace:System;assembly=mscorlib"
			 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
			 xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
			 xmlns:UserControls="clr-namespace:CofileUI.UserControls"
			 
             mc:Ignorable="d" 
			 
             d:DesignHeight="300" d:DesignWidth="800">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/CofileUI;component/Resources/StringResources/StringCofile.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<ObjectDataProvider x:Key="enumValues_cofileOptions"
								MethodName="GetValues" ObjectType="{x:Type System:Enum}">
				<ObjectDataProvider.MethodParameters>
					<x:Type TypeName="local:CofileOption"/>
				</ObjectDataProvider.MethodParameters>
			</ObjectDataProvider>

			<local:HideStringToDoubleConverter x:Key="HideStringToOpacityConverter" />

			<ItemsPanelTemplate x:Key="ItemsPanelTemplate_ListView_Icon">
				<WrapPanel/>
			</ItemsPanelTemplate>
			<ItemsPanelTemplate x:Key="ItemsPanelTemplate_ListView_Detail">
				<StackPanel/>
			</ItemsPanelTemplate>
			<DataTemplate x:Key="DataTemplate_ListView_ItemTemplate_Icon">
				<Grid Opacity="{Binding BindingName, Converter={StaticResource HideStringToOpacityConverter}}"
					  Width="70" Margin="0">
					<Rectangle Width="32" Height="32" VerticalAlignment="Top" >
						<Rectangle.Fill>
							<ImageBrush ImageSource="/CofileUI;component/Resources/file.png"/>
						</Rectangle.Fill>
						<Rectangle.Visibility>
							<Binding Path="IsDirectory" Converter="{StaticResource MyReverseBoolToVisibilityConverter}" ConverterParameter="true"/>
						</Rectangle.Visibility>
					</Rectangle>
					<Rectangle Width="32" Height="32" VerticalAlignment="Top" 
							   Visibility="{Binding Path=IsDirectory, Converter={StaticResource MyBoolToVisibilityConverter}}">
						<Rectangle.Fill>
							<ImageBrush ImageSource="/CofileUI;component/Resources/directory.png"/>
						</Rectangle.Fill>
					</Rectangle>
					<TextBlock x:Name="name" Margin="0,32,0,0" VerticalAlignment="Top" TextWrapping="Wrap" HorizontalAlignment="Stretch" TextAlignment="Center">
						<Run Text="{Binding BindingName, Mode=OneWay}"/>
					</TextBlock>
				</Grid>
			</DataTemplate>
			<Style x:Key="Style_ListView_ItemContainer" TargetType="ListViewItem">
				<Setter Property="VerticalContentAlignment" Value="Top" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			</Style>

			<Style x:Key="StyleListView" TargetType="ListView" BasedOn="{StaticResource MetroListView}">
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
				<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
				<Setter Property="UseLayoutRounding" Value="True"/>
				<Setter Property="ItemsPanel" Value="{StaticResource ItemsPanelTemplate_ListView_Icon}"/>
				<Setter Property="ItemTemplate" Value="{StaticResource DataTemplate_ListView_ItemTemplate_Icon}"/>
				<Setter Property="ItemContainerStyle" Value="{StaticResource Style_ListView_ItemContainer}"/>
				<Setter Property="SelectionMode" Value="Extended"/>
			</Style>
			<DataTemplate x:Key="DataTemplate_GridView_Name">
				<StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
									Height="20" 
									Opacity="{Binding BindingName, Converter={StaticResource HideStringToOpacityConverter}}">
					<Image Source="/CofileUI;component/Resources/directory.png" Stretch="UniformToFill"
									HorizontalAlignment="Left" VerticalAlignment="Stretch"
									Visibility="{Binding Path=IsDirectory, Converter={StaticResource MyBoolToVisibilityConverter}}"/>
					<Image Source="/CofileUI;component/Resources/file.png" Stretch="UniformToFill"
									HorizontalAlignment="Left" VerticalAlignment="Stretch"
									Visibility="{Binding Path=IsDirectory, Converter={StaticResource MyReverseBoolToVisibilityConverter}, ConverterParameter=true}"/>
					<TextBlock Text="{Binding BindingName}"
										Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="DataTemplate_GridView_Size">
				<TextBlock Text="{Binding Size}" TextAlignment="Right"/>
			</DataTemplate>
			<GridView x:Key="GridView_ListViewLinux_Detail" AllowsColumnReorder="True">
				<GridViewColumn Header="{DynamicResource String.GridViewColumn.Name}" Width="100" CellTemplate="{StaticResource DataTemplate_GridView_Name}"/>
				<GridViewColumn Header="{DynamicResource String.GridViewColumn.WriteTime}" Width="150" DisplayMemberBinding="{Binding LinuxTVI.FileInfo.LastWriteTime}"/>
				<!--<GridViewColumn Header="Type" Width="75" DisplayMemberBinding="{Binding Type}"/>-->
				<GridViewColumn Header="{DynamicResource String.GridViewColumn.Size}" Width="75" CellTemplate="{StaticResource DataTemplate_GridView_Size}"/>
				<!--<GridViewColumn Header="UserId" DisplayMemberBinding="{Binding LinuxTVI.FileInfo.UserId}"/>
				<GridViewColumn Header="GroupId" DisplayMemberBinding="{Binding LinuxTVI.FileInfo.GroupId}"/>-->
			</GridView>
			<GridView x:Key="GridView_ListViewWork_Detail" AllowsColumnReorder="True">
				<GridViewColumn Header="{DynamicResource String.GridViewColumn.Name}" Width="100" CellTemplate="{StaticResource DataTemplate_GridView_Name}"/>
				<GridViewColumn Header="{DynamicResource String.GridViewColumn.WriteTime}" Width="150" DisplayMemberBinding="{Binding LinuxTVI.FileInfo.LastWriteTime}"/>
				<GridViewColumn Header="{DynamicResource String.GridViewColumn.Size}" Width="75" CellTemplate="{StaticResource DataTemplate_GridView_Size}"/>
			</GridView>

			<Style x:Key="StyleBolderSplitter" TargetType="Border">
				<Setter Property="BorderBrush" Value="LightGray"/>
				<Setter Property="BorderThickness" Value="0,0,0,2"/>
				<Setter Property="Background" Value="White"/>
			</Style>
			<System:String x:Key="String.TextBlock.SelectConfig.NotSelect">Not Selected</System:String>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="30"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid Grid.Row="0">
			<Border Style="{StaticResource StyleBolderSplitter}"/>
			<!--<TextBlock Text="Possible Input Pattern"
											   Margin="0,0,20,0" Width="200" VerticalAlignment="Center" HorizontalAlignment="Left"
											   Foreground="LightSteelBlue" Visibility="{Binding ElementName=textBox_linux_directory_filter, Path=Text.IsEmpty, Converter={StaticResource MyBoolToVisibilityConverter}}" FontStyle="Italic" TextDecorations="{x:Null}"/>-->
			<TextBox x:Name="textBox_linux_directory_filter" Text="" Background="{x:Null}"
					 Margin="0,0,20,0" Width="200" VerticalAlignment="Center" HorizontalAlignment="Left" Controls:TextBoxHelper.Watermark="{DynamicResource String.TextBox.Filter}"/>
			<CheckBox x:Name="checkBox_hidden" Content="{DynamicResource String.CheckBox.HiddenFile}" Margin="210,0,0,0" HorizontalAlignment="Left"/>

			<ComboBox x:Name="comboBox_cofile_type"
					  Margin="0, 0, 320, 0" Width="100" Height="25" HorizontalAlignment="Right" SelectionChanged="OnChangeComboBoxCofileType"
					  ItemsSource="{Binding Source={StaticResource enumValues_cofileOptions}}"
					  SelectedIndex="0"/>
			<Button Content="{DynamicResource String.Button.SelectConfig}"
					Margin="0,0,210,0" Width="100" Height="25" VerticalAlignment="Center" HorizontalAlignment="Right"
					Click="OnClickButtonSelectConfigFile"/>
			<TextBlock x:Name="textBlock_selected_config_file_name" Text="{DynamicResource String.TextBlock.SelectConfig.NotSelect}" Background="{x:Null}"
					   Margin="0,0,0,0" Width="200" VerticalAlignment="Center" HorizontalAlignment="Right"/>
		</Grid>
		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid Grid.Column="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="30"/>
					<RowDefinition Height="100"/>
					<RowDefinition Height="5*"/>
				</Grid.RowDefinitions>

				<Grid Grid.Row="0" Margin="0,0,0,0">
					<Border Style="{StaticResource StyleBolderSplitter}"/>
					<ComboBox x:Name="comboBox_listView_linuxpath" Text="{DynamicResource String.ComboBox.LinuxPath.Init}"
							  Height="25" Margin="0,0,120,0" HorizontalAlignment="Stretch" IsEditable="True" KeyDown="label_listView_linux_KeyDown">
					</ComboBox>
					<Button Content="{DynamicResource String.Button.Refresh}" Background="White" Click="OnButtonClickRefresh"
							Height="25" Width="55" Margin="0,0,65,0" HorizontalAlignment="Right"/>
					<CheckBox x:Name="checkBox_linux_detail" Content="{DynamicResource String.CheckBox.DetailListView}" 
							  Width="60" HorizontalAlignment="Right" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
				</Grid>
				<Grid Grid.Row="1">
					<TreeView x:Name="treeView_linux_directory"/>
				</Grid>
				<Grid Grid.Row="2" Margin="2">
					<ListView x:Name="listView_linux_files" Style="{StaticResource StyleListView}"
							  MouseDoubleClick="OnMouseDoubleClickLinuxFile"
							  MouseMove="OnMouseMoveLinuxFile">

						<ListView.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{DynamicResource String.Context.Encrypt}" Click="OnClickLinuxFileEncrypt" Icon="{iconPacks:PackIconFontAwesome Kind=Lock}"/>
								<MenuItem Header="{DynamicResource String.Context.Decrypt}" Click="OnClickLinuxFileDecrypt" Icon="{iconPacks:PackIconFontAwesome Kind=Unlock}"/>
							</ContextMenu>
						</ListView.ContextMenu>
					</ListView>
				</Grid>

				<GridSplitter Background="Gray"
							  Grid.Row="1"
							  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="2"/>
			</Grid>
			<Grid Grid.Column="1">
				<Grid.RowDefinitions>
					<RowDefinition Height="30"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<Grid Grid.Row="0" Margin="0,0,3,0">
					<Border Style="{StaticResource StyleBolderSplitter}"/>
					<Label x:Name="label_listView_work" Content="{DynamicResource String.Label.ListViewWork}" HorizontalAlignment="Left"/>
					<CheckBox x:Name="checkBox_work_detail" Content="{DynamicResource String.CheckBox.DetailListView}" HorizontalAlignment="Right" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
				</Grid>
				<Grid Grid.Row="1">
					<ListView x:Name="listView_work_files" Style="{StaticResource StyleListView}"
							  AllowDrop="true"
							  Drop="OnDropWorkFile">

						<ListView.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{DynamicResource String.Context.Delete}" Click="OnClickWorkFileDelete"  Icon="{iconPacks:PackIconMaterial Kind=Delete}"/>
								<MenuItem Header="{DynamicResource String.Context.AllEncrypt}" Click="OnClickWorkFileAllEncrypt"  Icon="{iconPacks:PackIconFontAwesome Kind=Lock}"/>
								<MenuItem Header="{DynamicResource String.Context.AllDecrypt}" Click="OnClickWorkFileAllDecrypt"  Icon="{iconPacks:PackIconFontAwesome Kind=Unlock}"/>
								<MenuItem Header="{DynamicResource String.Context.SelectedEncrypt}" Click="OnClickWorkFileSelectedEncrypt" Icon="{iconPacks:PackIconFontAwesome Kind=Lock}"/>
								<MenuItem Header="{DynamicResource String.Context.SelectedDecrypt}" Click="OnClickWorkFileSelectedDecrypt" Icon="{iconPacks:PackIconFontAwesome Kind=Unlock}"/>
							</ContextMenu>
						</ListView.ContextMenu>
					</ListView>

					<!--<Grid Height="60" VerticalAlignment="Bottom">
						<Button Content="All Encrypt"
								Margin="0,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Right" Click="OnClickAllEncrypt"/>
						<Button Content="All Decrypt"
								Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Click="OnClickAllDecrypt"/>
						<Button Content="Selected Encrypt"
								Margin="0,0,80,0" VerticalAlignment="Top" HorizontalAlignment="Right" Click="OnClickSelectedEncrypt"/>
						<Button Content="Selected Decrypt"
								Margin="0,0,80,0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Click="OnClickSelectedDecrypt"/>
					</Grid>-->
				</Grid>
			</Grid>

			<GridSplitter Background="Gray"
						  Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"
						  HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="2"/>
		</Grid>
	</Grid>
</UserControl>
