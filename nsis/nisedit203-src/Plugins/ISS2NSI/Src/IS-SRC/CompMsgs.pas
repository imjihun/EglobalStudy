unit CompMsgs;

{
  Inno Setup
  Copyright (C) 1998-2001 Jordan Russell
  Portions by Martijn Laan
  For conditions of distribution and use, see LICENSE.TXT.

  Compiler Messages

  $jrsoftware: issrc/Projects/CompMsgs.pas,v 1.25 2002/12/14 19:45:28 jr Exp $

  All language-specific text used by the compiler is in here. If you want to
  translate it into another language, all you need to change is this unit.
}

interface

const
  SNewLine = #13#10;  { line break }
  SNewLine2 = #13#10#13#10;  { double line break }

  { Compiler form labels }
  SCompilerFormCaption = 'Inno Setup Compiler';
  SCompilerScriptFileLabel = 'Script &File:';
  SCompilerStatusLabel = 'Status &Messages:';
  SCompilerScriptBrowseButton = '&Browse...';
  SCompilerStartButton = '&Start';
  SCompilerExitButton = 'E&xit';
  SCompilerOpenFilter = 'Inno Setup Scripts (*.iss)|*.iss|All Files|*.*';
  SCompilerMoreFiles = 'More files...';

  { Compiler Script Wizard }
  SWizardDefaultName = 'Inno Setup Script Wizard';
  SWizardWelcome = 'Welcome';
  SWizardAppInfo = 'Application Information';
  SWizardAppInfo2 = 'Please specify some basic information about your application.';
  SWizardAppDir = 'Application Directory';
  SWizardAppDir2 = 'Please specify directory information about your application.';
  SWizardAppFiles = 'Application Files';
  SWizardAppFiles2 = 'Please specify the files that are part of your application.';
  SWizardAppFiles3 = 'Please specify the source directory.';
  SWizardAppExeFilter = 'Application files (*.exe)|*.exe|All Files|*.*';
  SWizardAppExeDefaultExt = 'exe';
  SWizardAppIcons = 'Application Icons';
  SWizardAppIcons2 = 'Please specify which icons should be created for your application.';
  SWizardAppDocs = 'Application Documentation';
  SWizardAppDocs2 = 'Please specify which documentation files should be shown by Setup during installation.';
  SWizardAppDocsFilter = 'Documentation files (*.rtf,*.txt)|*.rtf;*.txt|All Files|*.*';
  SWizardAppDocsDefaultExt = 'rtf';
  SWizardFinished = 'Finished';

  SWizardNextButton = '&Next >';
  SWizardFinishButton = '&Finish';
  SWizardCancelMessage = 'The [name] is not complete. If you quit now, the new script file will not be generated.'#13#13'Exit the [name]?';

  SWizardAllFilesFilter = 'All Files|*.*';

  SWizardAppNameError = 'Please specify the application name.';
  SWizardAppVerNameError = 'Please specify the application version.';
  SWizardAppRootDirError = 'Please specify the application destination base directory.';
  SWizardAppDirNameError = 'Please specify the application directory name.';
  SWizardAppExeError = 'Please specify the application main executable file.';
  SWizardAppGroupNameError = 'Please specify the application Start Menu group name.';
  SWizardFileDestRootDirError = 'Please specify the destination base directory.';
  SWizardFileAppDestRootDirError = 'Please specify a destination base directory other than the application directory.';

  SWizardScriptHeader = '; Script generated by the [name].' + SNewLine  + '; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!';

  { Compiler-specific messages }
  SCompilerVersion = 'version %s';

  SCompilerNotOnWin32s = 'The 32-bit compiler will not run on Win32s.';
  SCompilerCommandLineHelp3 = 'Command line usage:' + SNewLine +
    SNewLine +
    'compil32 /cc <script file>' + SNewLine +
    'compil32 /wizard <wizard name> <script file>' + SNewLine +
    SNewLine +
    'Examples:' + SNewLine +
    'compil32 /cc c:\isetup\sample32\sample1.iss' + SNewLine +
    'compil32 /cc "C:\Inno Setup\Sample32\My script.iss"' + SNewLine +
    'compil32 /wizard "My Script Wizard" c:\temp.iss';

  { Status messages }
  SCompilerStatusStarting = '*** Starting compile.';
  SCompilerStatusDeletingPrevious = 'Deleting %s from output directory';
  SCompilerStatusReadSectionLine = 'Reading [%s] section, line %d';
  SCompilerStatusFilesVerInfo = '   Reading version info: %s';
  SCompilerStatusFilesCompressing = '   Compressing: %s';
  SCompilerStatusFilesCompressingVersion = '   Compressing: %s   (%d.%d.%d.%d)';
  SCompilerStatusReadingFile = 'Reading file (%s)';
  SCompilerStatusReadingMessages = 'Reading [LangOptions] and [Messages] sections';
  SCompilerStatusReadingInFile = '   File: %s';
  SCompilerStatusReadingInScriptMsgs = '   Messages in script file';
  SCompilerStatusCreateSetupFiles = 'Creating setup files';
  SCompilerStatusCreatingDisk = '   Creating disk %d';
  SCompilerStatusFinished = '*** Finished.';
  SCompilerStatusError = 'ERROR:';
  SCompilerStatusErrorAborted = '*** Compile aborted.';
  SCompilerStatusReset = '*** Log size limit reached, list reset.';
  SCompilerStatusWarning = 'Warning: ';

  SCompilerSuccessfulMessage2 = 'The setup images were successfully created ' +
    'in the output directory:' + SNewLine +
    '%s' + SNewLine +
    SNewLine +
    'Would you like to test the installation now?';
  SCompilerSuccessfulTitle = 'Compile Successful';
  SCompilerExecuteSetupError = 'Error executing SETUP.EXE in output directory';

  SCompilerAborted = 'Compile aborted. Please correct the problem and try again.';

  { Fatal errors }
  SCompilerScriptMissing2 = 'Specified script file does not exist';
  SCompilerOutputNotEmpty2 = 'Output directory must be empty prior to ' +
    'compilation of any non-Setup files. Files named SETUP.* are ' +
    'automatically deleted at the start of compilation.';
  SCompilerSourceFileDoesntExist = 'Source file "%s" does not exist';
  SCompilerCopyError2 = 'Could not copy "%s" to "%s"';
  SCompilerCompressError2 = 'An internal error occurred while trying to compress "%s"';
  SCompilerNotEnoughSpaceOnFirstDisk = 'There is not enough space on the first disk to copy all of the required files';
  SCompilerSetup0Mismatch = 'Internal error SC1';
  SCompilerFileLargerThan2GB = 'Files larger than 2 GB are not supported';
  SCompilerMustUseDiskSpanning = 'Disk spanning must be enabled in order to create an installation larger than %d bytes in size';

  { [Setup] }
  SCompilerUnknownDirective = 'Unrecognized [%s] section directive "%s"';
  SCompilerBitsNot16or32_2 = '[Setup] section directive "Bits" must be either 16 or 32';
  SCompilerNeedToUse16 = 'You need to use the 16-bit compiler to compile a 16-bit installation';
  SCompilerEntryObsolete = 'The [%s] section directive "%s" is obsolete and ignored in this version of Inno Setup.';
  SCompilerEntrySuperseded2 = 'The [%s] section directive "%s" has been superseded by "%s" in this version of Inno Setup.';
  SCompilerEntryMissing2 = 'Required [%s] section directive "%s" not specified';
  SCompilerEntryInvalid2 = 'Value of [%s] section directive "%s" is invalid';
  SCompilerEntryTooLong = 'Value of [%s] section directive "%s" cannot be more than %d characters';
  SCompilerEntryAlreadySpecified = '[%s] section directive "%s" already specified';
  SCompilerMinVersionWinTooLow = 'Minimum Windows version specified by MinVersion must be at least %s';
  SCompilerMinVersionNTTooLow = 'Minimum NT version specified by MinVersion must be at least %s';
  SCompilerDiskSizeInvalid = 'DiskSize must be between %d and %d';
  SCompilerDiskClusterSizeInvalid = 'DiskClusterSize must be between 1 and 32768';
  SCompilerInstallModeObsolete = 'The [%s] section directive "%s" is obsolete and ignored in this version of Inno Setup. Use command line parameters instead.';

  { Line parsing }
  SCompilerError = 'Line %d:' + SNewLine +
    SNewLine +
    '%s';
  SCompilerLineTooLong = 'Line too long';
  SCompilerSectionTagInvalid = 'Invalid section tag';
  SCompilerSectionBadEndTag = 'Not inside "%s" section, but an end tag for ' +
    'it was encountered';
  SCompilerTextNotInSection = 'Text is not inside a section';
  SCompilerInvalidDirective = 'Invalid compiler directive';
  SCompilerErrorOpeningIncludeFile = 'Couldn''t open include file "%s": %s';
  SCompilerRecursiveInclude = 'Recursive include of "%s"';

  { Constant checks }
  SCompilerTwoBraces = 'Use two consecutive "{" characters if you are trying ' +
    'to embed a single "{" and not a constant';
  SCompilerUnknownConst = 'Unknown constant "%s".' +
    SNewLine + SNewLine + SCompilerTwoBraces;
  SCompilerUnterminatedConst = 'A "}" is missing at the end of the constant "%s".' +
    SNewLine + SNewLine + SCompilerTwoBraces;
  SCompilerConstCannotUse = 'The constant "%s" cannot be used here';
  SCompilerConstUsed =
    'The constant "%s" is used.';
  SCompilerMinVersionError =
    'This is not permitted unless the minimum Windows and Windows NT ' +
    'versions for the installation are at least %s and %s respectively. This ' +
    'can be set by adding a "MinVersion=%s,%s" setting to the [Setup] ' +
    'section of the script';
  SCompilerMinVersionErrorParam =
    'This is not permitted unless the minimum Windows and Windows NT ' +
    'versions for the entry are at least %s and %s respectively. This can ' +
    'be set by adding a "MinVersion: %s,%s" parameter to it. Alternatively, ' +
    'you can set the minimum versions globally by adding a "MinVersion=%s,%s" ' +
    'setting to the [Setup] section of the script';
  SCompilerBadEnvConst = 'Invalid environment constant "%s"';
  SCompilerBadRegConst = 'Invalid registry constant "%s"';
  SCompilerBadIniConst = 'Invalid INI constant "%s"';
  SCompilerBadParamConst = 'Invalid command line parameter constant "%s"';

  { Parameter parsing }
  SCompilerParamHasNoValue = 'Specified parameter "%s" has no value';
  SCompilerParamQuoteError = 'Mismatched or misplaced quotes on parameter "%s"';
  SCompilerParamMissingClosingQuote = 'Missing closing quote on parameter "%s"';
  SCompilerParamDataTooLong = 'Data on parameter "%s" is too long';
  SCompilerParamUnknownParam = 'Unrecognized parameter name "%s"';
  SCompilerParamDuplicated = 'Cannot have multiple "%s" parameters';
  SCompilerParamEmpty2 = 'Parameter "%s" is empty';
  SCompilerParamNotSpecified = 'Required parameter "%s" not specified';
  SCompilerParamNoQuotes2 = 'Parameter "%s" cannot include quotes (")';
  SCompilerParamNoBackslash = 'Parameter "%s" cannot include backslashes (\)';
  SCompilerParamNoPrecedingBackslash = 'Parameter "%s" cannot begin with a backslash (\)';
  SCompilerParamInvalid2 = 'Parameter "%s" is not a valid value';

  { Flags }
  SCompilerParamUnknownFlag2 = 'Parameter "%s" includes an unknown flag';
  SCompilerParamErrorBadCombo2 = 'Parameter "%s" cannot have both the "%s" and "%s" flags';
  SCompilerParamUnsupportedFlag = 'Parameter "%s" includes a flag that is not supported in this section';

  { Types, components and tasks }
  SCompilerParamUnknownType = 'Parameter "%s" includes an unknown type';
  SCompilerParamUnknownComponent = 'Parameter "%s" includes an unknown component';
  SCompilerParamUnknownTask = 'Parameter "%s" includes an unknown task';
  SCompilerComponentsExtraDiskSpaceRequiredInvalid = 'Parameter "ExtraDiskSpaceRequired" is invalid';

  { [Messages] }
  SCompilerMessagesMissingEquals = 'Missing "=" separator between message name and text';
  SCompilerMessagesNotRecognized = 'Message name "%s" not recognized by this version of Inno Setup';
  SCompilerMessagesMissingMessage = 'A message named "%s" has not been defined. It is required by this version of Inno Setup';

  { [Files] }
  SCompilerFilesTmpBadFlag = 'Parameter "Flags" cannot have the "%s" flag on ' +
    'a file copied to the {tmp} directory, or when the "deleteafterinstall" ' +
    'flag is used';
  SCompilerFilesWildcardNotMatched = 'No files found matching "%s"';
  SCompilerFilesDestNameCantBeSpecified = 'Parameter "DestName" cannot be specified if ' +
    'the "Source" parameter contains wildcards';
  SCompilerFilesSourceCantHaveWildcards = 'Parameter "Source" can''t include wildcards when ' +
    'the flag "external" is used';
  SCompilerFilesUnsafeFile = 'Unsafe file detected: %s.' + SNewLine2 +
    'See the "Unsafe Files" topic in the help file for more information';
  SCompilerFilesWarningCopyMode = '"CopyMode: %s" has been superseded by "Flags: %s" in ' +
    'this version of Inno Setup. Behaving as if "Flags: %s" were specified.';
  SCompilerFilesWarningASISOO = '"CopyMode: alwaysskipifsameorolder" is deprecated and ' +
    'ignored in this version of Inno Setup. It is now the default behavior.';

  { [Icons] }
  SCompilerIconsNamePathNotSpecified = 'Parameter "Name" must include a path for the icon, ' +
    'for example, "{group}\My Icon"';
  SCompilerIconsIconIndexInvalid = 'Parameter "IconIndex" is not a valid integer';

  { [Registry] }
  SCompilerRegistryCantDeleteKey = 'A top-level subkey may not be used in ' +
    'conjunction with the "uninsdeletekey" or "deletekey" flags';

  { [Run] }
  SCompilerRunCantUseRunOnceId = 'Parameter "RunOnceId" can only be used in ' +
    'an [UninstallRun] section';
  SCompilerRunFlagObsolete = 'Flag "%s" is obsolete. Use "%s" instead.';

  { [UninstallRun] }
  SCompilerUninstallRunCantUseDescription = 'Parameter "Description" can only be used in ' +
    'a [Run] section';

implementation

end.
